<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="clr-namespace:EDTVelizy.Viewer.ViewModels"
             xmlns:avalonia="clr-namespace:SpacedGridControl.Avalonia;assembly=SpacedGridControl.Avalonia"
             xmlns:controls="clr-namespace:EDTVelizy.Viewer.Controls"
             xmlns:markupExtensions="clr-namespace:FluentIcons.Avalonia.MarkupExtensions;assembly=FluentIcons.Avalonia"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="EDTVelizy.Viewer.Views.MainView"
             x:DataType="vm:MainViewModel">
  <Design.DataContext>
    <!-- This only sets the DataContext for the previewer in an IDE,
         to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
    <vm:MainViewModel />
  </Design.DataContext>

  <Grid>
      <avalonia:SpacedGrid RowDefinitions="Auto,Auto,*,Auto" RowSpacing="10"
                       ColumnDefinitions="*,*,*" ColumnSpacing="5"
                       Margin="10">
          
          <Button Grid.Column="0" Grid.Row="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                  Classes="Success" Theme="{DynamicResource OutlineButton}"
                  Content="{markupExtensions:SymbolIcon Symbol=ArrowLeft}" Command="{Binding PreviousDayCommand}"/>
          
          <avalonia:SpacedGrid Grid.Row="3" Grid.Column="1" 
                               ColumnDefinitions="Auto,*" ColumnSpacing="5">
              <Button Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                      Height="40" Width="40" Padding="0"
                      Classes="Primary" Theme="{DynamicResource OutlineButton}"
                      Content="{markupExtensions:SymbolIcon Symbol=Settings}" Command="{Binding OpenSettingsCommand}"/>
              
              <Button Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                      Classes="Warning" Theme="{DynamicResource OutlineButton}"
                      Content="{markupExtensions:SymbolIcon Symbol=Home}" Command="{Binding GoToTodayCommand}"/>
          </avalonia:SpacedGrid>
          
          <Button Grid.Column="2" Grid.Row="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                  Classes="Success" Theme="{DynamicResource OutlineButton}"
                  Content="{markupExtensions:SymbolIcon Symbol=ArrowRight}" Command="{Binding NextDayCommand}"/>
          
          <!-- On the second line, we'll show all 7 days of the week (L, M, M J, V, S, D) -->
          <avalonia:SpacedGrid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3">
              <ItemsControl ItemsSource="{Binding DaysOfWeek}" HorizontalAlignment="Center">
                  <ItemsControl.ItemTemplate>
                      <DataTemplate>
                           <Button Theme="{Binding Day, Converter={StaticResource DayOfWeekToButtonClassConverter}}"
                                   Classes.Secondary="{Binding !IsWeekend}"
                                   Classes.Tertiary="{Binding IsWeekend}"
                                   Command="{Binding SelectDay}"
                                   Content="{Binding Letter}" Padding="5" Width="30" Height="30" />
                      </DataTemplate>
                  </ItemsControl.ItemTemplate>
                  <ItemsControl.ItemsPanel>
                      <ItemsPanelTemplate>
                          <StackPanel Orientation="Horizontal" Spacing="5"/>
                        </ItemsPanelTemplate>
                  </ItemsControl.ItemsPanel>
              </ItemsControl>
          </avalonia:SpacedGrid>
          
          <ScrollViewer Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3">
              <controls:DailyScheduleControl x:Name="ScheduleControl" 
                                             Items="{Binding Items}"/>
          </ScrollViewer>
          
          <DatePicker Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" 
                      HorizontalAlignment="Stretch" VerticalAlignment="Center"
                      SelectedDate="{Binding DatePickerDate, Converter={StaticResource DateOnlyToDateTimeConverter}}"/>
          
      </avalonia:SpacedGrid>
      
      <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
              IsVisible="{Binding ShowingCourse, Converter={x:Static ObjectConverters.IsNotNull}}"
              Background="#971E1E1E">
          <Border Classes="Shadow" Theme="{StaticResource CardBorder}"
                  HorizontalAlignment="Center" VerticalAlignment="Center">
              <StackPanel Orientation="Vertical" Spacing="3">
                  <controls:CourseCard x:Name="CourseCardControl" />
                  <Separator />
                  <Button HorizontalAlignment="Stretch" 
                          Theme="{StaticResource OutlineButton}" Classes="Danger" 
                          Content="Fermer" Command="{Binding CloseCourseCommand}" />
              </StackPanel>
          </Border>
      </Border>
      
      <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
              IsVisible="{Binding IsLoading}"
              Background="#971E1E1E">
          <ProgressBar
              Width="100"
              Height="100"
              IsIndeterminate="True"
              Theme="{DynamicResource ProgressRing}"
              ShowProgressText="False"/>
      </Border>
      
      <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
              IsVisible="{Binding SettingsOpened}"
              Background="#971E1E1E">
            <Border Classes="Shadow" Theme="{StaticResource CardBorder}"
                    MinWidth="300" MinHeight="200"
                    HorizontalAlignment="Center" VerticalAlignment="Center">
                <controls:SettingsPage x:Name="Settings" />
            </Border>
      </Border>
  </Grid>
</UserControl>
